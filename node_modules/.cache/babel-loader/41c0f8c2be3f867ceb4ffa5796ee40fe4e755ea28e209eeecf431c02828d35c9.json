{"ast":null,"code":"var _jsxFileName = \"/home/sweta/newfile/src/Component/Dashboard/Charts/ProgressChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressChart = ({\n  popularity\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance = null;\n    const createProgressChart = () => {\n      const ctx = chartRef.current.getContext('2d');\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['Popularity'],\n          datasets: [{\n            label: 'Popularity',\n            data: [popularity],\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              display: false\n            },\n            y: {\n              min: 0,\n              max: 100,\n              ticks: {\n                stepSize: 20\n              }\n            }\n          }\n        }\n      });\n    };\n    createProgressChart();\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [popularity]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef,\n    style: {\n      width: '100%',\n      height: '20px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s(ProgressChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = ProgressChart;\nexport default ProgressChart;\nvar _c;\n$RefreshReg$(_c, \"ProgressChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","ProgressChart","popularity","_s","chartRef","chartInstance","createProgressChart","ctx","current","getContext","destroy","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","x","display","y","min","max","ticks","stepSize","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sweta/newfile/src/Component/Dashboard/Charts/ProgressChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ProgressChart = ({ popularity }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    let chartInstance = null;\n\n    const createProgressChart = () => {\n      const ctx = chartRef.current.getContext('2d');\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n\n      chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['Popularity'],\n          datasets: [\n            {\n              label: 'Popularity',\n              data: [popularity],\n              backgroundColor: 'rgba(75, 192, 192, 0.6)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              display: false,\n            },\n            y: {\n              min: 0,\n              max: 100,\n              ticks: {\n                stepSize: 20,\n              },\n            },\n          },\n        },\n      });\n    };\n\n    createProgressChart();\n\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [popularity]);\n\n  return <canvas ref={chartRef} style={{ width: '100%', height: '20px' }} />;\n};\n\nexport default ProgressChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIS,aAAa,GAAG,IAAI;IAExB,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,GAAG,GAAGH,QAAQ,CAACI,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;MAC7C,IAAIJ,aAAa,EAAE;QACjBA,aAAa,CAACK,OAAO,CAAC,CAAC;MACzB;MAEAL,aAAa,GAAG,IAAIP,KAAK,CAACS,GAAG,EAAE;QAC7BI,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC,YAAY,CAAC;UACtBC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,YAAY;YACnBH,IAAI,EAAE,CAACV,UAAU,CAAC;YAClBc,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,OAAO,EAAE;YACX,CAAC;YACDC,CAAC,EAAE;cACDC,GAAG,EAAE,CAAC;cACNC,GAAG,EAAE,GAAG;cACRC,KAAK,EAAE;gBACLC,QAAQ,EAAE;cACZ;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAEDvB,mBAAmB,CAAC,CAAC;IAErB,OAAO,MAAM;MACX,IAAID,aAAa,EAAE;QACjBA,aAAa,CAACK,OAAO,CAAC,CAAC;MACzB;IACF,CAAC;EACH,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,oBAAOF,OAAA;IAAQ8B,GAAG,EAAE1B,QAAS;IAAC2B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;AAAClC,EAAA,CAvDIF,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}