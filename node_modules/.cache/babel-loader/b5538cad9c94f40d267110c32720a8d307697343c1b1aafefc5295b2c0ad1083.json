{"ast":null,"code":"var _jsxFileName = \"/home/sweta/newfile/src/Component/Dashboard/Charts/VisitorInsight.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisitorInsightChart = () => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  useEffect(() => {\n    const data = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: [100, 200, 150, 250, 300, 200],\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n        // Red color\n        borderColor: 'rgba(255, 99, 132, 1)',\n        tension: 0.4,\n        fill: false\n      }, {\n        label: 'Dataset 2',\n        data: [150, 250, 200, 300, 250, 350],\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        // Blue color\n        borderColor: 'rgba(54, 162, 235, 1)',\n        tension: 0.4,\n        fill: false\n      }, {\n        label: 'Dataset 3',\n        data: [200, 300, 250, 350, 300, 400],\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        // Green color\n        borderColor: 'rgba(75, 192, 192, 1)',\n        tension: 0.4,\n        fill: false\n      }]\n    };\n    if (chartRef.current) {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n      const ctx = chartRef.current.getContext('2d');\n      chartInstanceRef.current = new Chart(ctx, {\n        type: 'line',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              beginAtZero: true,\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)'\n              }\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n};\n_s(VisitorInsightChart, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = VisitorInsightChart;\nexport default VisitorInsightChart;\nvar _c;\n$RefreshReg$(_c, \"VisitorInsightChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","VisitorInsightChart","_s","chartRef","chartInstanceRef","data","labels","datasets","label","backgroundColor","borderColor","tension","fill","current","destroy","ctx","getContext","type","options","responsive","maintainAspectRatio","scales","x","grid","display","y","beginAtZero","color","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sweta/newfile/src/Component/Dashboard/Charts/VisitorInsight.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst VisitorInsightChart = () => {\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n\n  useEffect(() => {\n    const data = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n      datasets: [\n        {\n          label: 'Dataset 1',\n          data: [100, 200, 150, 250, 300, 200],\n          backgroundColor: 'rgba(255, 99, 132, 0.6)', // Red color\n          borderColor: 'rgba(255, 99, 132, 1)',\n          tension: 0.4,\n          fill: false,\n        },\n        {\n          label: 'Dataset 2',\n          data: [150, 250, 200, 300, 250, 350],\n          backgroundColor: 'rgba(54, 162, 235, 0.6)', // Blue color\n          borderColor: 'rgba(54, 162, 235, 1)',\n          tension: 0.4,\n          fill: false,\n        },\n        {\n          label: 'Dataset 3',\n          data: [200, 300, 250, 350, 300, 400],\n          backgroundColor: 'rgba(75, 192, 192, 0.6)', // Green color\n          borderColor: 'rgba(75, 192, 192, 1)',\n          tension: 0.4,\n          fill: false,\n        },\n      ],\n    };\n\n    if (chartRef.current) {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n\n      const ctx = chartRef.current.getContext('2d');\n\n      chartInstanceRef.current = new Chart(ctx, {\n        type: 'line',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false,\n              },\n            },\n            y: {\n              beginAtZero: true,\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)',\n              },\n            },\n          },\n        },\n      });\n    }\n\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, []);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default VisitorInsightChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMO,gBAAgB,GAAGP,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMS,IAAI,GAAG;MACXC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;MAChEC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,WAAW;QAClBH,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACpCI,eAAe,EAAE,yBAAyB;QAAE;QAC5CC,WAAW,EAAE,uBAAuB;QACpCC,OAAO,EAAE,GAAG;QACZC,IAAI,EAAE;MACR,CAAC,EACD;QACEJ,KAAK,EAAE,WAAW;QAClBH,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACpCI,eAAe,EAAE,yBAAyB;QAAE;QAC5CC,WAAW,EAAE,uBAAuB;QACpCC,OAAO,EAAE,GAAG;QACZC,IAAI,EAAE;MACR,CAAC,EACD;QACEJ,KAAK,EAAE,WAAW;QAClBH,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACpCI,eAAe,EAAE,yBAAyB;QAAE;QAC5CC,WAAW,EAAE,uBAAuB;QACpCC,OAAO,EAAE,GAAG;QACZC,IAAI,EAAE;MACR,CAAC;IAEL,CAAC;IAED,IAAIT,QAAQ,CAACU,OAAO,EAAE;MACpB,IAAIT,gBAAgB,CAACS,OAAO,EAAE;QAC5BT,gBAAgB,CAACS,OAAO,CAACC,OAAO,CAAC,CAAC;MACpC;MAEA,MAAMC,GAAG,GAAGZ,QAAQ,CAACU,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;MAE7CZ,gBAAgB,CAACS,OAAO,GAAG,IAAIf,KAAK,CAACiB,GAAG,EAAE;QACxCE,IAAI,EAAE,MAAM;QACZZ,IAAI,EAAEA,IAAI;QACVa,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,IAAI,EAAE;gBACJC,OAAO,EAAE;cACX;YACF,CAAC;YACDC,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI;cACjBH,IAAI,EAAE;gBACJI,KAAK,EAAE;cACT;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAIvB,gBAAgB,CAACS,OAAO,EAAE;QAC5BT,gBAAgB,CAACS,OAAO,CAACC,OAAO,CAAC,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOd,OAAA;IAAQ4B,GAAG,EAAEzB;EAAS;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAAC9B,EAAA,CAzEID,mBAAmB;AAAAgC,EAAA,GAAnBhC,mBAAmB;AA2EzB,eAAeA,mBAAmB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}