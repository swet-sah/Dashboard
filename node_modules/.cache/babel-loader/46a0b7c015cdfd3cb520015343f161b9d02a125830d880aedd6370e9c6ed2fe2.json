{"ast":null,"code":"var _jsxFileName = \"/home/sweta/newfile/src/Component/Dashboard/Charts/Fundgraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fundgraph = () => {\n  _s();\n  const funds = [{\n    id: 1,\n    source: 'Donor A',\n    amount: 1000\n  }, {\n    id: 2,\n    source: 'Donor B',\n    amount: 500\n  }, {\n    id: 3,\n    source: 'Donor C',\n    amount: 2000\n  }];\n  const chartRef = useRef(null);\n  let chartInstance = useRef(null);\n  useEffect(() => {\n    const labels = funds.map(fund => fund.source);\n    const data = funds.map(fund => fund.amount);\n    const chartConfig = {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Fundraising Usage',\n          data: data,\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\n          borderWidth: 2\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              stepSize: 500\n            }\n          }\n        }\n      }\n    };\n    const ctx = chartRef.current.getContext('2d');\n    chartInstance.current = new Chart(ctx, chartConfig);\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n        chartInstance.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      height: 400,\n      width: 800\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Fundgraph, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = Fundgraph;\nexport default Fundgraph;\nvar _c;\n$RefreshReg$(_c, \"Fundgraph\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Fundgraph","_s","funds","id","source","amount","chartRef","chartInstance","labels","map","fund","data","chartConfig","type","datasets","label","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero","ticks","stepSize","ctx","current","getContext","destroy","children","ref","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sweta/newfile/src/Component/Dashboard/Charts/Fundgraph.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\n\nconst Fundgraph = () => {\n  const funds = [\n    { id: 1, source: 'Donor A', amount: 1000 },\n    { id: 2, source: 'Donor B', amount: 500 },\n    { id: 3, source: 'Donor C', amount: 2000 },\n  ];\n\n  const chartRef = useRef(null);\n  let chartInstance = useRef(null);\n\n  useEffect(() => {\n    const labels = funds.map((fund) => fund.source);\n    const data = funds.map((fund) => fund.amount);\n\n    const chartConfig = {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Fundraising Usage',\n            data: data,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              stepSize: 500,\n            },\n          },\n        },\n      },\n    };\n\n    const ctx = chartRef.current.getContext('2d');\n    chartInstance.current = new Chart(ctx, chartConfig);\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n        chartInstance.current = null;\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <canvas ref={chartRef} height={400} width={800} />\n    </div>\n  );\n};\n\nexport default Fundgraph;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC1C;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,CAC3C;EAED,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAIW,aAAa,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGN,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACN,MAAM,CAAC;IAC/C,MAAMO,IAAI,GAAGT,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACL,MAAM,CAAC;IAE7C,MAAMO,WAAW,GAAG;MAClBC,IAAI,EAAE,KAAK;MACXF,IAAI,EAAE;QACJH,MAAM,EAAEA,MAAM;QACdM,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,mBAAmB;UAC1BJ,IAAI,EAAEA,IAAI;UACVK,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE,IAAI;YACjBC,KAAK,EAAE;cACLC,QAAQ,EAAE;YACZ;UACF;QACF;MACF;IACF,CAAC;IAED,MAAMC,GAAG,GAAGpB,QAAQ,CAACqB,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAC7CrB,aAAa,CAACoB,OAAO,GAAG,IAAI9B,KAAK,CAAC6B,GAAG,EAAEd,WAAW,CAAC;IAEnD,OAAO,MAAM;MACX,IAAIL,aAAa,CAACoB,OAAO,EAAE;QACzBpB,aAAa,CAACoB,OAAO,CAACE,OAAO,CAAC,CAAC;QAC/BtB,aAAa,CAACoB,OAAO,GAAG,IAAI;MAC9B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA;IAAA+B,QAAA,eACE/B,OAAA;MAAQgC,GAAG,EAAEzB,QAAS;MAAC0B,MAAM,EAAE,GAAI;MAACC,KAAK,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACpC,EAAA,CAzDID,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}